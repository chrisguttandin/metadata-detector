// This is the minified and stringified code of the metadata-detector-worker package.
export const worker = `(()=>{"use strict";const e=e=>{let t=2130706432,n=0;for(;0!==t;)n>>=1,n|=e&t,t>>=8;return n};let t=null;const n=e=>"TextDecoder"in self?(null===t&&(t=new TextDecoder),t.decode(e)):String.fromCharCode.apply(null,new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),r=t=>{const r=[];let a=new DataView(t,0,4);if("fLaC"===n(a)){let e=!1,n=0,s=4;for(;!e;)s+=n,a=new DataView(t,s,4),e=0!=(128&a.getUint8(0)),n=4+(a.getUint8(3)|a.getUint8(2)<<8|a.getUint8(1)<<16);r.push([0,s+n])}if(a=new DataView(t,4,4),"ftyp"===n(a)){let e=0;for(;e<t.byteLength;){a=new DataView(t,e,4);const s=a.getUint32(0);a=new DataView(t,e+4,4);const i=n(a);"moov"!==i&&"wide"!==i||r.push([e,e+s]),e+=s}}if(a=new DataView(t,0,3),"ID3"===n(a)&&(a=new DataView(t,6,4),r.push([0,e(a.getUint32(0))+10])),a=new DataView(t,0,4),"OggS"===n(a)){let e=0;a=new DataView(t,4,1);const s=a.getUint8(0);for(;0===s&&e<t.byteLength;){a=new DataView(t,e+5,22);const s=a.getUint8(21);a=new DataView(t,e+27,s+1);let i=27+s;for(let e=0;e<s;e+=1)i+=a.getUint8(e);if(3===a.getUint8(s)){a=new DataView(t,e+27+s+1,6);"vorbis"===n(a)&&r.push([e,e+i])}e+=i}}return a=new DataView(t,t.byteLength-128,3),"TAG"===n(a)&&r.push([t.byteLength-128,t.byteLength]),r},a=e=>{const t=r(e);let n=0,a=e;return t.forEach((e=>{let[t,r]=e;a=t===n?a.slice(r,a.byteLength):r-n===a.byteLength?a.slice(0,t-n):function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(((e,t)=>{let{array:n,offset:r}=e;return n.set(new Uint8Array(t),r),{array:n,offset:r+t.byteLength}}),{array:new Uint8Array(t.reduce(((e,t)=>e+t.byteLength),0)),offset:0}).array.buffer}(a.slice(0,t-n),a.slice(r-n,a.byteLength)),n+=r-t})),a};addEventListener("message",(e=>{let{data:t}=e;try{if("locate"===t.method){const{id:e,params:{arrayBuffer:n}}=t,a=r(n);postMessage({error:null,id:e,result:{locations:a}})}else if("strip"===t.method){const{id:e,params:{arrayBuffer:n}}=t,r=a(n);postMessage({error:null,id:e,result:{arrayBuffer:r}},[r])}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}}))})();`; // tslint:disable-line:max-line-length
