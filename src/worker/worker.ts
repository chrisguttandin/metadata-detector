// This is the minified and stringified code of the metadata-detector-worker package.
export const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){!function(e){"use strict";var t=function(e){for(var t=2130706432,n=0;0!==t;)n>>=1,n|=e&t,t>>=8;return n},n=function(e){for(var t,n=127,r=e;0!=(2147483647^n);)t=r&~n,t<<=1,t|=r&n,n=(n+1<<8)-1,r=t;return t};e.decode=t,e.encode=n,Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,n){"use strict";n.r(t);var r=n(0);let a=null;const o=e=>"TextDecoder"in self?(null===a&&(a=new TextDecoder("utf-8")),a.decode(e)):String.fromCharCode.apply(null,new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),i=e=>{const t=[];let n=new DataView(e,0,4);if("fLaC"===o(n)){let r=!1,a=0,o=4;for(;!r;)o+=a,n=new DataView(e,o,4),r=0!=(128&n.getUint8(0)),a=4+(n.getUint8(3)|n.getUint8(2)<<8|n.getUint8(1)<<16);t.push([0,o+a])}if(n=new DataView(e,4,4),"ftyp"===o(n)){let r=0;for(;r<e.byteLength;){n=new DataView(e,r,4);const a=n.getUint32(0);n=new DataView(e,r+4,4);const i=o(n);"moov"!==i&&"wide"!==i||t.push([r,r+a]),r+=a}}if(n=new DataView(e,0,3),"ID3"===o(n)&&(n=new DataView(e,6,4),t.push([0,Object(r.decode)(n.getUint32(0))+10])),n=new DataView(e,0,4),"OggS"===o(n)){let r=0;n=new DataView(e,4,1);const a=n.getUint8(0);for(;0===a&&r<e.byteLength;){n=new DataView(e,r+5,22);const a=n.getUint8(21);n=new DataView(e,r+27,a+1);let i=27+a;for(let e=0;e<a;e+=1)i+=n.getUint8(e);if(3===n.getUint8(a)){n=new DataView(e,r+27+a+1,6);"vorbis"===o(n)&&t.push([r,r+i])}r+=i}}return n=new DataView(e,e.byteLength-128,3),"TAG"===o(n)&&t.push([e.byteLength-128,e.byteLength]),t},u=e=>{const t=i(e);let n=0,r=e;return t.forEach((([e,t])=>{r=e===n?r.slice(t,r.byteLength):t-n===r.byteLength?r.slice(0,e-n):((...e)=>e.reduce((({array:e,offset:t},n)=>(e.set(new Uint8Array(n),t),{array:e,offset:t+n.byteLength})),{array:new Uint8Array(e.reduce(((e,t)=>e+t.byteLength),0)),offset:0}).array.buffer)(r.slice(0,e-n),r.slice(t-n,r.byteLength)),n+=t-e})),r};addEventListener("message",(({data:e})=>{try{if("locate"===e.method){const{id:t,params:{arrayBuffer:n}}=e,r=i(n);postMessage({error:null,id:t,result:{locations:r}})}else if("strip"===e.method){const{id:t,params:{arrayBuffer:n}}=e,r=u(n);postMessage({error:null,id:t,result:{arrayBuffer:r}},[r])}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}}))}]);`; // tslint:disable-line:max-line-length
